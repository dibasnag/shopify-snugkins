<header class="collection-header collection-header-sections {% if section.settings.collection_header_style == 'style_2' %}layout-header--style2{% endif %}">
    <div class="relative">
        {% if section.settings.display_collection_image %}
    
        {% if collection.description contains '<img' %}
        {%- assign img_url = collection.description | split: '<img' | last | split: '>' | first -%}

        {% elsif section.settings.collection_image != blank %}
        {%- assign img_url = section.settings.collection_image | img_url: 'master' -%}
        
        {% endif %}
        
        <div class="collection-image">
            {% if collection.description contains '<img' or section.settings.collection_image != blank %}
            
            {% if collection.description contains '<img' %}
            <img {{ img_url }} alt="{{ collection_title }}" class="lazyautosizes lazyloaded" data-sizes="auto"/>
            {% else %}
            <img data-src="{{ img_url }}" class="lazyload" data-sizes="auto">
            {% endif %}
            {% endif %} 

            {% if section.settings.collection_header_style == 'style_1' %}  
            
            <div class="page-header tab-abs {% unless collection.description contains 'img' or section.settings.collection_image != blank %}collection-static{% endunless %}">
            <h1>
                {% render 'multilang' with collection.title %}
            </h1>
            </div>
            {% endif %}
        </div>
        {% endif %}
        
        <div class="collection-wrapper page-header {% unless collection.description contains 'img' or section.settings.collection_image != blank %}collection-static{% endunless %}">
            <div class="{% if settings.category_layout == "full_with" or template.suffix == 'fullwidth' %}container-padd60{% else %}container container-regular{% endif %}">
              {% if section.settings.collection_header_style == 'style_2' %}
              <div class="absolute {% unless collection.description contains '<img' or section.settings.collection_image != blank %}no-image{% endunless %}">
              {% endif %}
                <h1>
                    {% render 'multilang' with collection.title %}
                </h1>

                {% if collection.description != '' and section.settings.display_collection_des %}
                <div class="collection-des">
                    {% if settings.enable_multilang and collection.description contains '[lang2]' %}      
                    <div class="rte lang1">
                    {{ collection.description | split: '[lang2]' | first | split: '<img' | first }}
                    </div>
                    <div class="rte lang2">
                    {{ collection.description | split: '[lang2]' | last | split: '<img' | first }}
                    </div>
                    {% else %}
                    <div class="rte">
                    {{ collection.description | split: '[lang2]' | first | split: '<img' | first }}
                    </div>
                    {% endif %}
                </div>      
                {% endif %}
              {% if section.settings.collection_header_style == 'style_2' %}
              </div>
              {% endif %}
            </div>    
        </div>
    </div>
    {% if section.settings.enable_sub and linklists[collection.handle] != blank %}
    <div class="sub-collection">
      <div class="container">
        <div class="d-flex">
          <span>{{section.settings.sub_title}}</span>
          <ul class="list-sub-collection">
            {% for link in linklists[collection.handle].links %}
              <li class="item {% if link.active %}active{% endif %}">
                <a href="{{ link.url }}">{{ link.title }}</a>
              </li>
            {% endfor %}
          </ul>
        </div>
      </div>
    </div>
    {% endif %}
</header>

<style>  
  

  {% if section.settings.display_collection_image %} 
    .collection-header h1 span,
    .collection-header-sections .collection-des .rte, 
    .collection-header-sections .collection-des .rte a, 
    .collection-header-sections .collection-des .rte p {
      color: {{ section.settings.color_wrapper }};
    }
  {% endif %}
  
  {% if section.settings.display_collection_image %} 
  @media (min-width: 768px) {
    .collection-header-sections .page-header h1 {
      color: {{ section.settings.color_wrapper }};
    }
    .collection-header-sections .collection-static.page-header h1 {
      color: #000;
    }
  }
  {% endif %}
  
  @media (min-width: 1200px) {
    .collection-header-sections img {
      height: {{ section.settings.height_img }};
    }

    {% if section.settings.display_collection_image %} 
    .collection-header.collection-header-sections {
      position: relative;
    }

    {% if section.settings.collection_header_style == 'style_1' %}
    .collection-header.collection-header-sections .collection-wrapper:not(.collection-static) {
      position: absolute;
      top: 50%;
      left: 50%;
      -moz-transform: translate(-50%, -50%);
      -o-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
      -webkit-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
      text-align: center;
      width: 100%;
      max-width: 500px;
      margin: 0;
    }
    {% if settings.layout_style == 'layout_style_fullwidth' %}
      .collection-header.collection-header-sections .collection-wrapper:not(.collection-static) {
          bottom: 55px;
          top: auto;
          transform: translate(-50%, 0);
      }
    {% endif %}
    {% else %}
    .layout-header--style2 .container .absolute {
      background-color: {{ section.settings.bg_color_content }};
    }
    .layout-header--style2 .container .absolute:before {
      border-color: {{ section.settings.border_color_content }};
    }
    .layout-header--style2 .container .absolute .collection-des a {
      color: {{ section.settings.color_wrapper }};
    }
    {% endif %}
    
    .collection-header.collection-header-sections .collection-static {
      position: static;
      width: 100%;
      max-width: 500px;
      margin: 30px auto 0;
      text-align: center;
    }
    
    .collection-header.collection-header-sections .collection-image {
      margin-bottom: 1px;
    }
    
    {% else %}
    .collection-template .reverse-mb {
      display: -webkit-box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-flex-direction: column-reverse;
      -moz-flex-direction: column-reverse;
      -ms-flex-direction: column-reverse;
      flex-direction: column-reverse;
    }    
    {% endif %}
  }
  {% if section.settings.collection_header_style == 'style_1' %}
  @media (min-width: 768px) and (max-width: 1199px) {
    {% if section.settings.display_collection_image %}
    .collection-header.collection-header-sections .collection-wrapper h1 {
      display: none !important;
    }
    {% endif %}
  }
  {% endif %}
</style>

{% schema %}
  {
    "name": "Collection Header",
    "settings": [
      {
        "type": "checkbox",
        "id": "display_collection_image",
        "label": "Show collection image?",
        "default": true
      },
      {
        "type": "select",
        "id": "collection_header_style",
        "label": "Style Collection Header",
        "options": [
        {
            "value": "style_1",
            "label": "Style Default"
        },
        {
            "value": "style_2",
            "label": "Style 2"
        }],
        "default": "style_1",
        "info": "Default: Style Default"
      },
      {
        "type": "image_picker",
        "id": "collection_image",
        "label": "Image Category",
        "info": "This image will show up when you don't add image in Collections Description"
      },
  	  {
        "type": "checkbox",
        "id": "display_collection_des",
        "label": "Display Collections Description?",
        "default": true
      },
  	  {
    		"type" : "color",
    		"id" : "color_wrapper",
    		"label" : "Color Wrapper",
    		"default" : "#202020"
  	  },
      {
        "type" : "color",
        "id" : "bg_color_content",
        "label" : "Background color content",
        "default" : "#fff",
        "info": "This settings only use for Style 2"
      },
      {
        "type" : "color",
        "id" : "border_color_content",
        "label" : "Border color content",
        "default" : "#bcbcbc",
        "info": "This settings only use for Style 2"
      },
  	  {
    		"type" : "text",
    		"id" : "height_img",
    		"label" : "Image height",
    		"default" : "240px"
      },
      {
        "type" : "header",
        "content" : "Sub Collection"
      },
      {
        "type" : "checkbox",
        "id" : "enable_sub",
        "label" : "Enable?",
        "default" : false
      },
      {
        "type" : "text",
        "id" : "sub_title",
        "label" : "Title",
        "default" : "Jump to:"
      }
  	]
  }
{% endschema %}